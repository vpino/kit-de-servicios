#!/bin/bash -e
#
# ==============================================================================
# PAQUETE: kit-servicios
# ARCHIVO: postinst
# DESCRIPCIÓN: Configura el sistema despues la instalación del paquete.
# COPYRIGHT:
#  (C) 2016 Victor Pino <victopin0@gmail.com>
# LICENCIA: GPL3
# ==============================================================================
#
# Este programa es software libre. Puede redistribuirlo y/o modificarlo bajo los
# términos de la Licencia Pública General de GNU (versión 3).


case "$1" in
    configure)

        serviceCommand() {
            if service --status-all | grep -Fq ${1}; then
                service ${1} ${2}
            fi
        }

        echo "Colocando /etc/default/celeryd en /etc/kds/diverted/celeryd"
        dpkg-divert --divert /etc/kds/diverted/default/celeryd --rename /etc/default/celeryd

        if [ -e /etc/default/celeryd ] ; then

            echo "Elimiando posible enlance simbolico /etc/default/celeryd"
            unlink  /etc/default/celeryd

        fi

        if [ ! -e /etc/default/celeryd ] ; then

            echo "Instalando configuracion personalizada para Celeryd default"
            ln /etc/kds/default/celeryd /etc/default/celeryd

        fi

        echo "Colocando /etc/init.d/celeryd en /etc/kds/diverted/init.d/celeryd"
        dpkg-divert --divert /etc/kds/diverted/init.d/celeryd --rename /etc/init.d/celeryd

        if [ -e /etc/init.d/celeryd ] ; then

            echo "Elimiando posible enlance simbolico /etc/init.d/celeryd"
            unlink /etc/init.d/celeryd

        fi

        if [ ! -e /etc/init.d/celeryd ] ; then

            echo "Instalando configuracion personalizada para Celeryd init"
            ln /etc/kds/init.d/celeryd /etc/init.d/celeryd

        fi
                       
        # Source debconf library.
        . /usr/share/debconf/confmodule
       
        if [[ ! -d /home/kds/.ssh/ && -d /home/kds/ ]]; then

            mkdir /home/kds/.ssh/
            chown kds:kds -R /home/kds/

        fi 
        
        echo "Generando llave ssh al usuario kds"
        su -s /bin/bash -c  'ssh-keygen -t rsa -f /home/kds/.ssh/id_rsa -q -P ""' kds

        /etc/init.d/rabbitmq-server restart

        echo "Configurando rabbitmq-server"

        rabbitmqctl add_user kds 11

        echo "==== add virtual host 'kds_vhost' === "

        rabbitmqctl add_vhost kds_vhost

        echo "==== add user tag 'kds_tag' for user 'kds' ==="

        rabbitmqctl set_user_tags kds kds_tag

        echo "==== set permission for user 'kds' on virtual host 'kds_vhost' ==="

        rabbitmqctl set_permissions -p kds_vhost kds ".*" ".*" ".*"

        echo "Eliminar archivo /etc/nginx/sites-available/default"
        if [ -f /etc/nginx/sites-available/default ] ; then

            rm -rf /etc/nginx/sites-available/default

        fi

        if [ -d /usr/share/python/kit-servicios/ ]; then
        
            echo "Modificando los permisos de la carpeta del proyecto"
            chmod 755 /usr/share/python/kit-servicios/

        fi

        if [ -d /usr/share/python/kit-servicios/lib/python2.7/site-packages/kit-servicios/ ]; then

            echo "Permisos a la carpeta del proyecto"
            chown -R www-data:www-data /usr/share/python/kit-servicios/lib/python2.7/site-packages/kit-servicios/

            chmod 777 /usr/share/python/kit-servicios/lib/python2.7/site-packages/kit-servicios/ansible.log
            chmod 777 /usr/share/python/kit-servicios/lib/python2.7/site-packages/kit-servicios/playbook-log

        fi
         
        echo "Configurando permisos y grupos de celeryd"
        chmod +x /etc/init.d/celeryd
        chown root:root /etc/init.d/celeryd
        chmod 777 /etc/init.d/celeryd

        echo "Creando archivos de log de celeryd"
        
        if [ -f /var/log/celery/w1.log ]; then

            rm -f /var/log/celery/w1.log
            rm -f /var/run/celery/w1.pid

        elif [ -d /var/log/celery/ ]; then

            touch /var/log/celery/w1.log
            touch /var/run/celery/w1.pid

        fi

        echo "Reiniciando los servicios"
        serviceCommand apache2 stop
        serviceCommand nginx restart
		serviceCommand uwsgi restart || true
        /etc/init.d/celeryd restart 
        serviceCommand redis-server restart
      
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

#DEBHELPER#

exit 0
